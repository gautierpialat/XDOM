include GdalCore.opt
TARGETS = sqlite3 proj6 geos gdal
all: $(TARGETS)
	
UP  = $(shell echo '$*' | tr a-z A-Z)
LW = $(shell echo '$*' | tr A-Z a-z)

% :
ifeq ($(findstring $(LW),$(TARGETS)),$(LW)) #TODO: how to fix this?
	$(MAKE) -f GdalMakefile  init_$(LW)
	$(MAKE) -f GdalMakefile  configure_$(LW)
	$(MAKE) -f GdalMakefile  build_$(LW)
endif
	exit 0

init_%: 
	if [ ! -d "$($(UP)_ROOT)" ]; then \
		git clone $($(UP)_REPO) $($(UP)_ROOT); \
	fi;
	cd $($(UP)_ROOT) && git checkout -q $($(UP)_COMMIT_VER)


configure_gdal:
	./configuregdal.sh 
	
configure_sqlite3:
	if [ ! -d "$(BUILD_ROOT)/sqlite3-build" ]; then \
		mkdir $(BUILD_ROOT)/sqlite3-build; \
	fi;
	cd $(BUILD_ROOT)/sqlite3-build && $(SQLITE3_ROOT)/configure --prefix=$(BUILD_ROOT)/sqlite3-build 

build_sqlite3:
	cd $(BUILD_ROOT)/sqlite3-build && make

configure_%:
	cd $($(UP)_ROOT) && chmod +x ./autogen.sh && ./autogen.sh && ./configure  --prefix=$(BUILD_ROOT)/$(LW)-build

build_%:
	cd $($(UP)_ROOT) && make && make install

build_gdal:
	cd $(GDAL_ROOT)/gdal && make && make install
reset_SQLITE3:
	cd $(BUILD_ROOT)/sqlite3-build && rm -f -R *.so *.o 
reset: reset_PROJ6 reset_GDAL reset_GEOS
reset_%: 
	cd $($(UP)_ROOT) && git checkout -q $($(UP)_COMMIT_VER) && git reset --hard && git clean -fqdx; 
